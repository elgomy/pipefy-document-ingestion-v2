#!/usr/bin/env python3
"""
Script de teste final para integra√ß√£o CNPJ.
"""

import asyncio
import sys
from pathlib import Path

# Adicionar o diret√≥rio raiz ao path
sys.path.insert(0, str(Path(__file__).parent.parent))

from src.integrations.cnpj_client import CNPJClient, CNPJAPIError
from src.services.cnpj_service import CNPJService, CNPJServiceError


async def test_cnpj_integration():
    """Teste completo da integra√ß√£o CNPJ."""
    print("üîß Teste Final da Integra√ß√£o CNPJ")
    print("=" * 50)
    
    # Teste 1: Valida√ß√£o de CNPJ
    print("\n1. Teste de Valida√ß√£o de CNPJ:")
    client = CNPJClient()
    
    cnpjs_teste = [
        "11.222.333/0001-81",  # V√°lido
        "00.000.000/0000-00",  # Inv√°lido
        "123",                 # Formato inv√°lido
    ]
    
    for cnpj in cnpjs_teste:
        is_valid = client._validate_cnpj(cnpj)
        status = "‚úÖ V√°lido" if is_valid else "‚ùå Inv√°lido"
        print(f"   {cnpj}: {status}")
    
    # Teste 2: Consulta de dados (mock)
    print("\n2. Teste de Consulta de Dados:")
    try:
        cnpj_data = await client.get_cnpj_data("11.222.333/0001-81")
        print(f"   ‚úÖ CNPJ: {cnpj_data.cnpj}")
        print(f"   ‚úÖ Raz√£o Social: {cnpj_data.razao_social}")
        print(f"   ‚úÖ Situa√ß√£o: {cnpj_data.situacao_cadastral}")
        print(f"   ‚úÖ API Source: {cnpj_data.api_source}")
    except CNPJAPIError as e:
        print(f"   ‚ùå Erro: {e}")
    
    # Teste 3: Gera√ß√£o de cart√£o
    print("\n3. Teste de Gera√ß√£o de Cart√£o:")
    try:
        card = await client.generate_cnpj_card("11.222.333/0001-81")
        print(f"   ‚úÖ Cart√£o gerado para: {card['cnpj']}")
        print(f"   ‚úÖ Raz√£o Social: {card['razao_social']}")
        print(f"   ‚úÖ Gerado em: {card['generated_at']}")
    except CNPJAPIError as e:
        print(f"   ‚ùå Erro: {e}")
    
    # Teste 4: Servi√ßo CNPJ
    print("\n4. Teste do Servi√ßo CNPJ:")
    service = CNPJService()
    
    try:
        # Valida√ß√£o para triagem
        validation = await service.validate_cnpj_for_triagem("11.222.333/0001-81")
        print(f"   ‚úÖ Valida√ß√£o: {validation['valid']}")
        print(f"   ‚úÖ CNPJ: {validation['cnpj']}")
        print(f"   ‚úÖ Raz√£o Social: {validation['razao_social']}")
        
        # Gera√ß√£o e armazenamento de cart√£o
        card_result = await service.gerar_e_armazenar_cartao_cnpj("11.222.333/0001-81")
        print(f"   ‚úÖ Cart√£o armazenado: {card_result['cnpj']}")
        print(f"   ‚úÖ Arquivo: {card_result.get('file_path', 'N/A')}")
        
    except CNPJServiceError as e:
        print(f"   ‚ùå Erro no servi√ßo: {e}")
    
    print("\n" + "=" * 50)
    print("‚úÖ Teste Final Conclu√≠do!")


if __name__ == "__main__":
    asyncio.run(test_cnpj_integration())